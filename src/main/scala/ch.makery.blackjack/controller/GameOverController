package ch.makery.blackjack.controller

import scalafx.Includes._
import scalafx.scene.control.Button
import scalafx.scene.Scene
import scalafxml.core.{FXMLView, NoDependencyResolver}
import scalafx.stage.Stage
import scalafx.scene.layout.AnchorPane
import scalafxml.core.macros.sfxml

@sfxml
class GameOverController(val mainMenuButton: Button, val playAgainButton: Button) {

  mainMenuButton.onAction = handle {
    try {
      val resource = getClass.getResource("/interface/MainMenu.fxml")
      if (resource == null) {
        throw new RuntimeException("Could not load FXML file for Main Menu")
      }

      val root = FXMLView(resource, NoDependencyResolver)
      val scalaRoot = new AnchorPane(root.asInstanceOf[javafx.scene.layout.AnchorPane])

      val stage = mainMenuButton.getScene.getWindow.asInstanceOf[javafx.stage.Stage]
      val scalaStage = new Stage(stage)
      scalaStage.scene = new Scene(scalaRoot, 800, 600)
    } catch {
      case e: Exception =>
        e.printStackTrace()
        throw new RuntimeException("Failed to load Main Menu page.", e)
    }
  }

  playAgainButton.onAction = handle {
    try {
      val resource = getClass.getResource("/interface/Game.fxml")
      if (resource == null) {
        throw new RuntimeException("Could not load FXML file for Game")
      }

      val root = FXMLView(resource, NoDependencyResolver)
      val scalaRoot = new AnchorPane(root.asInstanceOf[javafx.scene.layout.AnchorPane])

      val stage = playAgainButton.getScene.getWindow.asInstanceOf[javafx.stage.Stage]
      val scalaStage = new Stage(stage)
      scalaStage.scene = new Scene(scalaRoot, 800, 550) 
    } catch {
      case e: Exception =>
        e.printStackTrace()
        throw new RuntimeException("Failed to load Game page.", e)
    }
  }
}
